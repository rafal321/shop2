@model PagedList.IPagedList<shop2.Models.Customer>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Customers";
}


    <h2>Customers Section</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    @*=== Searching Stuff=========*@
    @using (Html.BeginForm("Index", "Customer", FormMethod.Get))
    {
        <p>
            Find by Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
    @*=== Searching Stuff=========*@


<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.CName) ====Old Code*@
            @Html.ActionLink("Customer Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Name
        </th>
<th>
            @*@Html.DisplayNameFor(model => model.CAddress) =====Old Code*@
            @Html.ActionLink("Address", "Index", new { sortOrder = ViewBag.AddressSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
       @*<th>
        @Html.DisplayNameFor(model => model.Phone)
    </th>
    *@ 
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CustomerID }) |
                @Html.ActionLink("Details", "Details", new { id = item.CustomerID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.CustomerID })
            </td>
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
